import type { AppProps } from 'next/app';
import {
  Container,
  CssBaseline,
  ThemeProvider,
  createTheme
} from '@mui/material';
import { useEffect, useState } from 'react';
import Header from '@/app/layout/Header';
import Head from 'next/head';
import { ToastContainer } from 'react-toastify';
import Initializer from '@/app/Initializer';
import { Provider } from 'react-redux';
import { store } from '@/app/store';

import '@/app/layout/globals.css';
import '@fontsource/roboto/300.css';
import '@fontsource/roboto/400.css';
import '@fontsource/roboto/500.css';
import '@fontsource/roboto/700.css';
import 'react-toastify/dist/ReactToastify.css';

export default function App({ Component, pageProps }: AppProps) {
  const [isDarkMode, setIsDarkMode] = useState(false);

  const paletteType = isDarkMode ? 'dark' : 'light';

  const theme = createTheme({
    palette: {
      mode: paletteType,
      background: {
        default: paletteType === 'light' ? '#F7F7F7' : '#121212'
      }
    }
  });

  useEffect(() => {
    const isDark = localStorage.getItem('isDarkMode');

    if (isDark) {
      setIsDarkMode(Boolean(isDark));
    }
  }, []);

  const toggleDarkMode = () => {
    setIsDarkMode(!isDarkMode);
    localStorage.setItem('isDarkMode', String(!isDarkMode));
  };

  return (
    <>
      <Head>
        <title>ReStore</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ThemeProvider theme={theme}>
        <Provider store={store}>
          <ToastContainer
            position="bottom-right"
            hideProgressBar
            theme="colored"
          />
          <CssBaseline />
          <Header toggleDarkMode={toggleDarkMode} isDarkMode={isDarkMode} />
          <main>
            <Container>
              <Initializer>
                <Component {...pageProps} />
              </Initializer>
            </Container>
          </main>
        </Provider>
      </ThemeProvider>
    </>
  );
}
